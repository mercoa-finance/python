# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing_extensions
import typing
from .onboarding_option_request import OnboardingOptionRequest
from ...core.serialization import FieldMetadata
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class CommonOnboardingOptionsRequest(UniversalBaseModel):
    terms_of_service: typing_extensions.Annotated[
        typing.Optional[OnboardingOptionRequest], FieldMetadata(alias="termsOfService")
    ] = None
    email: typing.Optional[OnboardingOptionRequest] = None
    name: typing.Optional[OnboardingOptionRequest] = None
    address: typing.Optional[OnboardingOptionRequest] = None
    phone: typing.Optional[OnboardingOptionRequest] = None
    ten_ninety_nine: typing_extensions.Annotated[
        typing.Optional[OnboardingOptionRequest], FieldMetadata(alias="tenNinetyNine")
    ] = None
    w_9: typing_extensions.Annotated[typing.Optional[OnboardingOptionRequest], FieldMetadata(alias="w9")] = None
    bank_statement: typing_extensions.Annotated[
        typing.Optional[OnboardingOptionRequest], FieldMetadata(alias="bankStatement")
    ] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
