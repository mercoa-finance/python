# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...core.serialization import FieldMetadata
from ...payment_method_types.types.payment_method_type import PaymentMethodType


class MetadataShowConditions(UniversalBaseModel):
    always_hide: typing_extensions.Annotated[typing.Optional[bool], FieldMetadata(alias="alwaysHide")] = pydantic.Field(
        default=None
    )
    """
    Always hide this field. Useful for getting data from OCR and AI predictions that you don't want to show in the UI.
    """

    has_options: typing_extensions.Annotated[typing.Optional[bool], FieldMetadata(alias="hasOptions")] = pydantic.Field(
        default=None
    )
    """
    Show this field only if the entity has values set for the metadata key.
    """

    has_document: typing_extensions.Annotated[typing.Optional[bool], FieldMetadata(alias="hasDocument")] = (
        pydantic.Field(default=None)
    )
    """
    Show this field only if a document has been attached.
    """

    has_no_line_items: typing_extensions.Annotated[typing.Optional[bool], FieldMetadata(alias="hasNoLineItems")] = (
        pydantic.Field(default=None)
    )
    """
    Show this field only if the invoice has no line items. Useful for showing a field that applies to the entire invoice but overridden by line items if present.
    """

    payment_source_types: typing_extensions.Annotated[
        typing.Optional[typing.List[PaymentMethodType]], FieldMetadata(alias="paymentSourceTypes")
    ] = pydantic.Field(default=None)
    """
    Show this field only if the payment source type is in this list.
    """

    payment_source_custom_schema_ids: typing_extensions.Annotated[
        typing.Optional[typing.List[str]], FieldMetadata(alias="paymentSourceCustomSchemaIds")
    ] = pydantic.Field(default=None)
    """
    Show this field only if the payment source schema ID is in this list of payment source schema IDs. This is only applicable if paymentSourceTypes contains CUSTOM.
    """

    payment_destination_types: typing_extensions.Annotated[
        typing.Optional[typing.List[PaymentMethodType]], FieldMetadata(alias="paymentDestinationTypes")
    ] = pydantic.Field(default=None)
    """
    Show this field only if the payment destination type is in this list.
    """

    payment_destination_custom_schema_ids: typing_extensions.Annotated[
        typing.Optional[typing.List[str]], FieldMetadata(alias="paymentDestinationCustomSchemaIds")
    ] = pydantic.Field(default=None)
    """
    Show this field only if the payment destination schema ID is in this list of payment destination schema IDs. This is only applicable if paymentDestinationTypes contains CUSTOM.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
