# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...core.serialization import FieldMetadata


class MetadataValidationRule_Regex(UniversalBaseModel):
    type: typing.Literal["regex"] = "regex"
    regex: str
    error_message: typing_extensions.Annotated[str, FieldMetadata(alias="errorMessage")]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


MetadataValidationRule = MetadataValidationRule_Regex
