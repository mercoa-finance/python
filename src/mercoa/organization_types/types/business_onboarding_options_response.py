# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2
from ...core.serialization import FieldMetadata
from .common_onboarding_options_response import CommonOnboardingOptionsResponse
from .onboarding_option_response import OnboardingOptionResponse


class BusinessOnboardingOptionsResponse(CommonOnboardingOptionsResponse):
    type: OnboardingOptionResponse
    doing_business_as: typing_extensions.Annotated[OnboardingOptionResponse, FieldMetadata(alias="doingBusinessAs")]
    ein: OnboardingOptionResponse
    mcc: OnboardingOptionResponse
    formation_date: typing_extensions.Annotated[OnboardingOptionResponse, FieldMetadata(alias="formationDate")]
    website: OnboardingOptionResponse
    description: OnboardingOptionResponse
    representatives: OnboardingOptionResponse
    logo: OnboardingOptionResponse
    average_transaction_size: typing_extensions.Annotated[
        OnboardingOptionResponse, FieldMetadata(alias="averageTransactionSize")
    ]
    average_monthly_transaction_volume: typing_extensions.Annotated[
        OnboardingOptionResponse, FieldMetadata(alias="averageMonthlyTransactionVolume")
    ]
    max_transaction_size: typing_extensions.Annotated[
        OnboardingOptionResponse, FieldMetadata(alias="maxTransactionSize")
    ]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
