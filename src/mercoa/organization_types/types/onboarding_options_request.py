# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing_extensions
import typing
from ...core.serialization import FieldMetadata
from .business_onboarding_options_request import BusinessOnboardingOptionsRequest
from .individual_onboarding_options_request import IndividualOnboardingOptionsRequest
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class OnboardingOptionsRequest(UniversalBaseModel):
    enable_business: typing_extensions.Annotated[typing.Optional[bool], FieldMetadata(alias="enableBusiness")] = None
    enable_individual: typing_extensions.Annotated[typing.Optional[bool], FieldMetadata(alias="enableIndividual")] = (
        None
    )
    payment_method: typing_extensions.Annotated[typing.Optional[bool], FieldMetadata(alias="paymentMethod")] = None
    business: typing.Optional[BusinessOnboardingOptionsRequest] = None
    individual: typing.Optional[IndividualOnboardingOptionsRequest] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
