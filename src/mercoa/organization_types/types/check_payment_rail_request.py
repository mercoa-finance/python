# This file was auto-generated by Fern from our API Definition.

from .generic_payment_rail_request import GenericPaymentRailRequest
import typing_extensions
import typing
from ...invoice_types.types.check_delivery_method import CheckDeliveryMethod
from ...core.serialization import FieldMetadata
import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class CheckPaymentRailRequest(GenericPaymentRailRequest):
    available_delivery_methods: typing_extensions.Annotated[
        typing.Optional[typing.List[CheckDeliveryMethod]],
        FieldMetadata(alias="availableDeliveryMethods"),
    ] = None
    default_delivery_method: typing_extensions.Annotated[
        typing.Optional[CheckDeliveryMethod],
        FieldMetadata(alias="defaultDeliveryMethod"),
    ] = None
    print_description: typing_extensions.Annotated[typing.Optional[bool], FieldMetadata(alias="printDescription")] = (
        pydantic.Field(default=None)
    )
    """
    If true, invoices default to printing the invoice description (noteToSelf) on the check note.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
