# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing_extensions
from .onboarding_option_response import OnboardingOptionResponse
from ...core.serialization import FieldMetadata
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import typing
import pydantic


class CommonOnboardingOptionsResponse(UniversalBaseModel):
    terms_of_service: typing_extensions.Annotated[OnboardingOptionResponse, FieldMetadata(alias="termsOfService")]
    email: OnboardingOptionResponse
    name: OnboardingOptionResponse
    address: OnboardingOptionResponse
    phone: OnboardingOptionResponse
    ten_ninety_nine: typing_extensions.Annotated[OnboardingOptionResponse, FieldMetadata(alias="tenNinetyNine")]
    w_9: typing_extensions.Annotated[OnboardingOptionResponse, FieldMetadata(alias="w9")]
    bank_statement: typing_extensions.Annotated[OnboardingOptionResponse, FieldMetadata(alias="bankStatement")]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
