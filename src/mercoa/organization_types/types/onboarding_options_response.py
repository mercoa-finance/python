# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...core.serialization import FieldMetadata
from .business_onboarding_options_response import BusinessOnboardingOptionsResponse
from .individual_onboarding_options_response import IndividualOnboardingOptionsResponse


class OnboardingOptionsResponse(UniversalBaseModel):
    enable_business: typing_extensions.Annotated[bool, FieldMetadata(alias="enableBusiness")]
    enable_individual: typing_extensions.Annotated[bool, FieldMetadata(alias="enableIndividual")]
    payment_method: typing_extensions.Annotated[bool, FieldMetadata(alias="paymentMethod")]
    business: BusinessOnboardingOptionsResponse
    individual: IndividualOnboardingOptionsResponse

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
