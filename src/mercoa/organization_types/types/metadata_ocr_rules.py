# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing_extensions
import typing
from ...core.serialization import FieldMetadata
import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class MetadataOcrRules(UniversalBaseModel):
    extract_from_document: typing_extensions.Annotated[
        typing.Optional[bool], FieldMetadata(alias="extractFromDocument")
    ] = pydantic.Field(default=None)
    """
    Attempt to extract this field from reading the document. Only applicable to line item metadata fields. Defaults to false.
    """

    predict_from_history: typing_extensions.Annotated[
        typing.Optional[bool], FieldMetadata(alias="predictFromHistory")
    ] = pydantic.Field(default=None)
    """
    Attempt to predict this field from historical invoice metadata. Only applicable to line item metadata fields. Defaults to true.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
