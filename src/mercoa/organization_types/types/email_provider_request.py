# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
from .email_sender_request import EmailSenderRequest
import typing_extensions
from ...core.serialization import FieldMetadata
import typing
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class EmailProviderRequest(UniversalBaseModel):
    sender: EmailSenderRequest
    inbox_domain: typing_extensions.Annotated[str, FieldMetadata(alias="inboxDomain")]
    alternative_inbox_domains: typing_extensions.Annotated[
        typing.Optional[typing.List[str]], FieldMetadata(alias="alternativeInboxDomains")
    ] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
