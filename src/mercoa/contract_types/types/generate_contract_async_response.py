# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing_extensions
from .contract_job_id import ContractJobId
from ...core.serialization import FieldMetadata
import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import typing


class GenerateContractAsyncResponse(UniversalBaseModel):
    """
    Examples
    --------
    from mercoa.contract_types import GenerateContractAsyncResponse

    GenerateContractAsyncResponse(
        job_id="cntgen_d6734204-ae46-4fe9-a0c5-bd2763d40c9b",
    )
    """

    job_id: typing_extensions.Annotated[ContractJobId, FieldMetadata(alias="jobId")] = pydantic.Field()
    """
    Job ID
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
