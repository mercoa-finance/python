# This file was auto-generated by Fern from our API Definition.

from .transaction_response_check_base import TransactionResponseCheckBase
import typing_extensions
import typing
import datetime as dt
from ...core.serialization import FieldMetadata
import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class TransactionResponseCheckBaseMailed(TransactionResponseCheckBase):
    mailed_on_date: typing_extensions.Annotated[typing.Optional[dt.datetime], FieldMetadata(alias="mailedOnDate")] = (
        pydantic.Field(default=None)
    )
    """
    The date the check was mailed. If the check was not mailed, this field will be null.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
