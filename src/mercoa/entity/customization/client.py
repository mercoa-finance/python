# This file was auto-generated by Fern from our API Definition.

import typing

from ...core.client_wrapper import AsyncClientWrapper, SyncClientWrapper
from ...core.request_options import RequestOptions
from ...entity_types.types.entity_customization_request import EntityCustomizationRequest
from ...entity_types.types.entity_customization_response import EntityCustomizationResponse
from ...entity_types.types.entity_id import EntityId
from .raw_client import AsyncRawCustomizationClient, RawCustomizationClient

# this is used as the default value for optional parameters
OMIT = typing.cast(typing.Any, ...)


class CustomizationClient:
    def __init__(self, *, client_wrapper: SyncClientWrapper):
        self._raw_client = RawCustomizationClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> RawCustomizationClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        RawCustomizationClient
        """
        return self._raw_client

    def get(
        self, entity_id: EntityId, *, request_options: typing.Optional[RequestOptions] = None
    ) -> EntityCustomizationResponse:
        """
        Get entity customization.

        Parameters
        ----------
        entity_id : EntityId
            Entity ID or Entity ForeignID

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        EntityCustomizationResponse

        Examples
        --------
        from mercoa import Mercoa

        client = Mercoa(
            token="YOUR_TOKEN",
        )
        client.entity.customization.get(
            entity_id="ent_a0f6ea94-0761-4a5e-a416-3c453cb7eced",
        )
        """
        _response = self._raw_client.get(entity_id, request_options=request_options)
        return _response.data

    def update(
        self,
        entity_id: EntityId,
        *,
        request: EntityCustomizationRequest,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> EntityCustomizationResponse:
        """
        Update entity customization. This lets you turn off metadata and payment methods for an entity.

        Parameters
        ----------
        entity_id : EntityId
            Entity ID or Entity ForeignID

        request : EntityCustomizationRequest

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        EntityCustomizationResponse

        Examples
        --------
        from mercoa import Mercoa
        from mercoa.customization_types import (
            FeeCustomizationDetailRequest,
            FeeCustomizationRailRequest,
            FeeCustomizationRequest,
            InvoiceCustomizationRequest,
            MetadataCustomizationRequest,
            NotificationCustomizationRequest,
            OcrCustomizationRequest,
            PaymentMethodCustomizationRequest_BankAccount,
            PaymentMethodCustomizationRequest_Check,
            PaymentMethodCustomizationRequest_Custom,
            PaymentMethodFee_Flat,
            PaymentMethodFee_Percentage,
            WorkflowCustomizationRequest,
        )
        from mercoa.entity_types import EntityCustomizationRequest

        client = Mercoa(
            token="YOUR_TOKEN",
        )
        client.entity.customization.update(
            entity_id="ent_a0f6ea94-0761-4a5e-a416-3c453cb7eced",
            request=EntityCustomizationRequest(
                metadata=[
                    MetadataCustomizationRequest(
                        key="my_custom_field",
                        disabled=True,
                    ),
                    MetadataCustomizationRequest(
                        key="my_other_field",
                        disabled=False,
                    ),
                ],
                payment_source=[
                    PaymentMethodCustomizationRequest_BankAccount(
                        disabled=True,
                        default_delivery_method="ACH_SAME_DAY",
                    ),
                    PaymentMethodCustomizationRequest_Custom(
                        schema_id="cpms_7df2974a-4069-454c-912f-7e58ebe030fb",
                        disabled=True,
                    ),
                ],
                backup_disbursement=[
                    PaymentMethodCustomizationRequest_Check(
                        disabled=True,
                        default_delivery_method="MAIL",
                        print_description=True,
                    )
                ],
                payment_destination=[
                    PaymentMethodCustomizationRequest_BankAccount(
                        disabled=True,
                        default_delivery_method="ACH_SAME_DAY",
                    ),
                    PaymentMethodCustomizationRequest_Check(
                        disabled=True,
                        default_delivery_method="MAIL",
                        print_description=True,
                    ),
                ],
                ocr=OcrCustomizationRequest(
                    line_items=True,
                    collapse_line_items=True,
                    invoice_metadata=True,
                    line_item_metadata=True,
                    line_item_gl_account_id=True,
                    predict_metadata=True,
                    tax_and_shipping_as_line_items=True,
                    split_documents=True,
                ),
                notifications=NotificationCustomizationRequest(
                    assume_role="admin",
                ),
                workflow=WorkflowCustomizationRequest(
                    auto_advance_invoice_status=True,
                ),
                invoice=InvoiceCustomizationRequest(
                    hide_address=False,
                    hide_qr_code=False,
                    hide_bank_details=False,
                    hide_payment_link=False,
                ),
                role_permissions={"admin": ["invoice.all", "paymentMethod.all"]},
                fees=FeeCustomizationRequest(
                    payable=FeeCustomizationDetailRequest(
                        source=FeeCustomizationRailRequest(
                            ach_standard=PaymentMethodFee_Flat(
                                amount=2.5,
                            ),
                            ach_same_day=PaymentMethodFee_Percentage(
                                amount=2.5,
                            ),
                            check_print=PaymentMethodFee_Flat(
                                amount=2.5,
                            ),
                            check_mail=PaymentMethodFee_Flat(
                                amount=2.5,
                            ),
                            check_mail_priority=PaymentMethodFee_Flat(
                                amount=2.5,
                            ),
                            check_mail_ups_next_day=PaymentMethodFee_Flat(
                                amount=2.5,
                            ),
                        ),
                        destination=FeeCustomizationRailRequest(
                            ach_standard=PaymentMethodFee_Flat(
                                amount=2.5,
                            ),
                            ach_same_day=PaymentMethodFee_Percentage(
                                amount=2.5,
                            ),
                            check_print=PaymentMethodFee_Flat(
                                amount=2.5,
                            ),
                            check_mail=PaymentMethodFee_Flat(
                                amount=2.5,
                            ),
                            check_mail_priority=PaymentMethodFee_Flat(
                                amount=2.5,
                            ),
                            check_mail_ups_next_day=PaymentMethodFee_Flat(
                                amount=2.5,
                            ),
                        ),
                    ),
                    receivable=FeeCustomizationDetailRequest(
                        source=FeeCustomizationRailRequest(
                            ach_standard=PaymentMethodFee_Flat(
                                amount=2.5,
                            ),
                            ach_same_day=PaymentMethodFee_Percentage(
                                amount=2.5,
                            ),
                            check_print=PaymentMethodFee_Flat(
                                amount=2.5,
                            ),
                            check_mail=PaymentMethodFee_Flat(
                                amount=2.5,
                            ),
                            check_mail_priority=PaymentMethodFee_Flat(
                                amount=2.5,
                            ),
                            check_mail_ups_next_day=PaymentMethodFee_Flat(
                                amount=2.5,
                            ),
                        ),
                        destination=FeeCustomizationRailRequest(
                            ach_standard=PaymentMethodFee_Flat(
                                amount=2.5,
                            ),
                            ach_same_day=PaymentMethodFee_Percentage(
                                amount=2.5,
                            ),
                            check_print=PaymentMethodFee_Flat(
                                amount=2.5,
                            ),
                            check_mail=PaymentMethodFee_Flat(
                                amount=2.5,
                            ),
                            check_mail_priority=PaymentMethodFee_Flat(
                                amount=2.5,
                            ),
                            check_mail_ups_next_day=PaymentMethodFee_Flat(
                                amount=2.5,
                            ),
                        ),
                    ),
                ),
            ),
        )
        """
        _response = self._raw_client.update(entity_id, request=request, request_options=request_options)
        return _response.data


class AsyncCustomizationClient:
    def __init__(self, *, client_wrapper: AsyncClientWrapper):
        self._raw_client = AsyncRawCustomizationClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> AsyncRawCustomizationClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        AsyncRawCustomizationClient
        """
        return self._raw_client

    async def get(
        self, entity_id: EntityId, *, request_options: typing.Optional[RequestOptions] = None
    ) -> EntityCustomizationResponse:
        """
        Get entity customization.

        Parameters
        ----------
        entity_id : EntityId
            Entity ID or Entity ForeignID

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        EntityCustomizationResponse

        Examples
        --------
        import asyncio

        from mercoa import AsyncMercoa

        client = AsyncMercoa(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.entity.customization.get(
                entity_id="ent_a0f6ea94-0761-4a5e-a416-3c453cb7eced",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.get(entity_id, request_options=request_options)
        return _response.data

    async def update(
        self,
        entity_id: EntityId,
        *,
        request: EntityCustomizationRequest,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> EntityCustomizationResponse:
        """
        Update entity customization. This lets you turn off metadata and payment methods for an entity.

        Parameters
        ----------
        entity_id : EntityId
            Entity ID or Entity ForeignID

        request : EntityCustomizationRequest

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        EntityCustomizationResponse

        Examples
        --------
        import asyncio

        from mercoa import AsyncMercoa
        from mercoa.customization_types import (
            FeeCustomizationDetailRequest,
            FeeCustomizationRailRequest,
            FeeCustomizationRequest,
            InvoiceCustomizationRequest,
            MetadataCustomizationRequest,
            NotificationCustomizationRequest,
            OcrCustomizationRequest,
            PaymentMethodCustomizationRequest_BankAccount,
            PaymentMethodCustomizationRequest_Check,
            PaymentMethodCustomizationRequest_Custom,
            PaymentMethodFee_Flat,
            PaymentMethodFee_Percentage,
            WorkflowCustomizationRequest,
        )
        from mercoa.entity_types import EntityCustomizationRequest

        client = AsyncMercoa(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.entity.customization.update(
                entity_id="ent_a0f6ea94-0761-4a5e-a416-3c453cb7eced",
                request=EntityCustomizationRequest(
                    metadata=[
                        MetadataCustomizationRequest(
                            key="my_custom_field",
                            disabled=True,
                        ),
                        MetadataCustomizationRequest(
                            key="my_other_field",
                            disabled=False,
                        ),
                    ],
                    payment_source=[
                        PaymentMethodCustomizationRequest_BankAccount(
                            disabled=True,
                            default_delivery_method="ACH_SAME_DAY",
                        ),
                        PaymentMethodCustomizationRequest_Custom(
                            schema_id="cpms_7df2974a-4069-454c-912f-7e58ebe030fb",
                            disabled=True,
                        ),
                    ],
                    backup_disbursement=[
                        PaymentMethodCustomizationRequest_Check(
                            disabled=True,
                            default_delivery_method="MAIL",
                            print_description=True,
                        )
                    ],
                    payment_destination=[
                        PaymentMethodCustomizationRequest_BankAccount(
                            disabled=True,
                            default_delivery_method="ACH_SAME_DAY",
                        ),
                        PaymentMethodCustomizationRequest_Check(
                            disabled=True,
                            default_delivery_method="MAIL",
                            print_description=True,
                        ),
                    ],
                    ocr=OcrCustomizationRequest(
                        line_items=True,
                        collapse_line_items=True,
                        invoice_metadata=True,
                        line_item_metadata=True,
                        line_item_gl_account_id=True,
                        predict_metadata=True,
                        tax_and_shipping_as_line_items=True,
                        split_documents=True,
                    ),
                    notifications=NotificationCustomizationRequest(
                        assume_role="admin",
                    ),
                    workflow=WorkflowCustomizationRequest(
                        auto_advance_invoice_status=True,
                    ),
                    invoice=InvoiceCustomizationRequest(
                        hide_address=False,
                        hide_qr_code=False,
                        hide_bank_details=False,
                        hide_payment_link=False,
                    ),
                    role_permissions={"admin": ["invoice.all", "paymentMethod.all"]},
                    fees=FeeCustomizationRequest(
                        payable=FeeCustomizationDetailRequest(
                            source=FeeCustomizationRailRequest(
                                ach_standard=PaymentMethodFee_Flat(
                                    amount=2.5,
                                ),
                                ach_same_day=PaymentMethodFee_Percentage(
                                    amount=2.5,
                                ),
                                check_print=PaymentMethodFee_Flat(
                                    amount=2.5,
                                ),
                                check_mail=PaymentMethodFee_Flat(
                                    amount=2.5,
                                ),
                                check_mail_priority=PaymentMethodFee_Flat(
                                    amount=2.5,
                                ),
                                check_mail_ups_next_day=PaymentMethodFee_Flat(
                                    amount=2.5,
                                ),
                            ),
                            destination=FeeCustomizationRailRequest(
                                ach_standard=PaymentMethodFee_Flat(
                                    amount=2.5,
                                ),
                                ach_same_day=PaymentMethodFee_Percentage(
                                    amount=2.5,
                                ),
                                check_print=PaymentMethodFee_Flat(
                                    amount=2.5,
                                ),
                                check_mail=PaymentMethodFee_Flat(
                                    amount=2.5,
                                ),
                                check_mail_priority=PaymentMethodFee_Flat(
                                    amount=2.5,
                                ),
                                check_mail_ups_next_day=PaymentMethodFee_Flat(
                                    amount=2.5,
                                ),
                            ),
                        ),
                        receivable=FeeCustomizationDetailRequest(
                            source=FeeCustomizationRailRequest(
                                ach_standard=PaymentMethodFee_Flat(
                                    amount=2.5,
                                ),
                                ach_same_day=PaymentMethodFee_Percentage(
                                    amount=2.5,
                                ),
                                check_print=PaymentMethodFee_Flat(
                                    amount=2.5,
                                ),
                                check_mail=PaymentMethodFee_Flat(
                                    amount=2.5,
                                ),
                                check_mail_priority=PaymentMethodFee_Flat(
                                    amount=2.5,
                                ),
                                check_mail_ups_next_day=PaymentMethodFee_Flat(
                                    amount=2.5,
                                ),
                            ),
                            destination=FeeCustomizationRailRequest(
                                ach_standard=PaymentMethodFee_Flat(
                                    amount=2.5,
                                ),
                                ach_same_day=PaymentMethodFee_Percentage(
                                    amount=2.5,
                                ),
                                check_print=PaymentMethodFee_Flat(
                                    amount=2.5,
                                ),
                                check_mail=PaymentMethodFee_Flat(
                                    amount=2.5,
                                ),
                                check_mail_priority=PaymentMethodFee_Flat(
                                    amount=2.5,
                                ),
                                check_mail_ups_next_day=PaymentMethodFee_Flat(
                                    amount=2.5,
                                ),
                            ),
                        ),
                    ),
                ),
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.update(entity_id, request=request, request_options=request_options)
        return _response.data
