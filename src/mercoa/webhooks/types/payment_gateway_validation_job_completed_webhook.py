# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing_extensions
from ...core.serialization import FieldMetadata
import pydantic
from ...payment_gateway_types.types.validate_payment_gateway_response import (
    ValidatePaymentGatewayResponse,
)
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import typing


class PaymentGatewayValidationJobCompletedWebhook(UniversalBaseModel):
    """
    Examples
    --------
    from mercoa.payment_gateway_types import (
        ValidatePaymentGatewayCardFee_Percentage,
        ValidatePaymentGatewayCardResponse,
        ValidatePaymentGatewayResponse_Success,
    )
    from mercoa.webhooks import PaymentGatewayValidationJobCompletedWebhook

    PaymentGatewayValidationJobCompletedWebhook(
        event_type="paymentGateway.validation.completed",
        job_id="pgv_8f86116b-3b4d-4ded-99ef-3bc929d8c33c",
        data=ValidatePaymentGatewayResponse_Success(
            job_id="job_1a92b5f7-f522-435e-a953-fd649363730a",
            payment_gateway_url="https://www.payment-gateway.com/invoice/job_1a92b5f7-f522-435e-a953-fd649363730a",
            session_url="https://www.payment-gateway.com/session/job_1a92b5f7-f522-435e-a953-fd649363730a",
            card=ValidatePaymentGatewayCardResponse(
                eligibility="ACCEPTED",
                fee=ValidatePaymentGatewayCardFee_Percentage(
                    value=2.5,
                ),
            ),
        ),
    )
    """

    event_type: typing_extensions.Annotated[str, FieldMetadata(alias="eventType")] = pydantic.Field()
    """
    The type of the event.
    """

    job_id: typing_extensions.Annotated[str, FieldMetadata(alias="jobId")] = pydantic.Field()
    """
    The ID of the payment gateway validation job that completed.
    """

    data: ValidatePaymentGatewayResponse

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
