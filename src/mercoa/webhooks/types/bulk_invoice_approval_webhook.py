# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...core.serialization import FieldMetadata
from ...invoice_types.types.bulk_invoice_approval_from_object_response import BulkInvoiceApprovalFromObjectResponse


class BulkInvoiceApprovalWebhook(UniversalBaseModel):
    """
    Examples
    --------
    from mercoa.invoice_types import BulkInvoiceApprovalFromObjectResponse
    from mercoa.webhooks import BulkInvoiceApprovalWebhook

    BulkInvoiceApprovalWebhook(
        event_type="invoice.bulk.approved",
        data=[
            BulkInvoiceApprovalFromObjectResponse(
                id="in_26e7b5d3-a739-4b23-9ad9-6aaa085f47a9",
            ),
            BulkInvoiceApprovalFromObjectResponse(
                id="in_26e7b5d3-a739-4b23-9ad9-6aaa085f47a9",
                error="Invoice approval failed",
            ),
        ],
    )
    """

    event_type: typing_extensions.Annotated[str, FieldMetadata(alias="eventType")] = pydantic.Field()
    """
    The type of the event.
    """

    data: typing.List[BulkInvoiceApprovalFromObjectResponse] = pydantic.Field()
    """
    A list of bulk invoice approval responses.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
