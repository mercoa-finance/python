# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing_extensions
from ...core.serialization import FieldMetadata
import pydantic
from ...payment_gateway_types.types.process_payment_gateway_response import (
    ProcessPaymentGatewayResponse,
)
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import typing


class PaymentGatewayProcessJobCompletedWebhook(UniversalBaseModel):
    """
    Examples
    --------
    import datetime

    from mercoa.payment_gateway_types import ProcessPaymentGatewayResponse_Success
    from mercoa.webhooks import PaymentGatewayProcessJobCompletedWebhook

    PaymentGatewayProcessJobCompletedWebhook(
        event_type="paymentGateway.process.completed",
        job_id="pgp_8f86116b-3b4d-4ded-99ef-3bc929d8c33c",
        data=ProcessPaymentGatewayResponse_Success(
            job_id="pgp_8f86116b-3b4d-4ded-99ef-3bc929d8c33c",
            receipt_url="https://www.payment-gateway.com/receipt/123123",
            created_at=datetime.datetime.fromisoformat(
                "2024-01-01 00:00:00+00:00",
            ),
            updated_at=datetime.datetime.fromisoformat(
                "2024-01-01 00:00:00+00:00",
            ),
        ),
    )
    """

    event_type: typing_extensions.Annotated[str, FieldMetadata(alias="eventType")] = pydantic.Field()
    """
    The type of the event.
    """

    job_id: typing_extensions.Annotated[str, FieldMetadata(alias="jobId")] = pydantic.Field()
    """
    The ID of the payment gateway process job that completed.
    """

    data: ProcessPaymentGatewayResponse

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
