# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...core.serialization import FieldMetadata
from .vendor_portal_tab import VendorPortalTab


class VendorPortalOptions(UniversalBaseModel):
    tabs: typing.Optional[typing.List[VendorPortalTab]] = pydantic.Field(default=None)
    """
    The tabs to display in the vendor portal. If not provided, all tabs will be displayed.
    """

    default_tab: typing_extensions.Annotated[typing.Optional[VendorPortalTab], FieldMetadata(alias="defaultTab")] = (
        pydantic.Field(default=None)
    )
    """
    The default tab to display in the vendor portal. If not provided, the HOME tab will be displayed.
    """

    welcome_message: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="welcomeMessage")] = (
        pydantic.Field(default=None)
    )
    """
    The welcome message to display in the vendor portal. If not provided, no welcome message will be displayed.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
