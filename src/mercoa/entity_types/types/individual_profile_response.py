# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ...commons.types.address import Address
from ...commons.types.full_name import FullName
from ...commons.types.phone_number import PhoneNumber
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...core.serialization import FieldMetadata


class IndividualProfileResponse(UniversalBaseModel):
    email: typing.Optional[str] = None
    name: FullName
    phone: typing.Optional[PhoneNumber] = None
    address: typing.Optional[Address] = None
    birth_date_provided: typing_extensions.Annotated[bool, FieldMetadata(alias="birthDateProvided")]
    government_id_provided: typing_extensions.Annotated[bool, FieldMetadata(alias="governmentIDProvided")]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
