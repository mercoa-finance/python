# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...core.serialization import FieldMetadata
from .approval_policy_response import ApprovalPolicyResponse
from .entity_user_id import EntityUserId


class ApprovalPolicyHistoryResponse(UniversalBaseModel):
    """
    Examples
    --------
    import datetime

    from mercoa.entity_types import (
        ApprovalPolicyHistoryResponse,
        ApprovalPolicyResponse,
        IdentifierList_RolesList,
        IdentifierList_UserList,
        Rule_Approver,
        Trigger_Amount,
    )

    ApprovalPolicyHistoryResponse(
        id="hist_21661ac1-a2a8-4465-a6c0-64474ba8181d",
        policies=[
            ApprovalPolicyResponse(
                id="apvl_21661ac1-a2a8-4465-a6c0-64474ba8181d",
                trigger=[],
                rule=Rule_Approver(
                    num_approvers=2,
                    identifier_list=IdentifierList_UserList(
                        value=[
                            "usr_8545a84e-a45f-41bf-bdf1-33b42a55812c",
                            "usr_21661ac1-a2a8-4465-a6c0-64474ba8181d",
                        ]
                    ),
                ),
                upstream_policy_id="root",
                updated_at=datetime.datetime.fromisoformat(
                    "2024-01-02 00:00:00+00:00",
                ),
                created_at=datetime.datetime.fromisoformat(
                    "2024-01-01 00:00:00+00:00",
                ),
            ),
            ApprovalPolicyResponse(
                id="apvl_8545a84e-a45f-41bf-bdf1-33b42a55812c",
                trigger=[
                    Trigger_Amount(
                        amount=100.0,
                        currency="USD",
                    )
                ],
                rule=Rule_Approver(
                    num_approvers=2,
                    identifier_list=IdentifierList_RolesList(
                        value=["Admin", "Controller"]
                    ),
                ),
                upstream_policy_id="root",
                updated_at=datetime.datetime.fromisoformat(
                    "2024-01-02 00:00:00+00:00",
                ),
                created_at=datetime.datetime.fromisoformat(
                    "2024-01-01 00:00:00+00:00",
                ),
            ),
        ],
        user_id="user_8545a84e-a45f-41bf-bdf1-33b42a55812c",
        created_at=datetime.datetime.fromisoformat(
            "2024-01-02 00:00:00+00:00",
        ),
    )
    """

    id: str = pydantic.Field()
    """
    The ID of the approval policy history
    """

    policies: typing.List[ApprovalPolicyResponse]
    user_id: typing_extensions.Annotated[EntityUserId, FieldMetadata(alias="userId")] = pydantic.Field()
    """
    The user ID of the user who edited the approval policy
    """

    created_at: typing_extensions.Annotated[dt.datetime, FieldMetadata(alias="createdAt")]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
