# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class MetadataCustomizationRequest(UniversalBaseModel):
    """
    Examples
    --------
    from mercoa.customization_types import MetadataCustomizationRequest

    MetadataCustomizationRequest(
        key="my_custom_field",
        disabled=True,
    )
    """

    key: str = pydantic.Field()
    """
    The key of the metadata field. This must be defined at the organization level, otherwise an error will be returned.
    """

    disabled: bool = pydantic.Field()
    """
    If true, this field will not be available to the entity.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
