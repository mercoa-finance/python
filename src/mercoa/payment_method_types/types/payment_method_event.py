# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
from .payment_method_event_id import PaymentMethodEventId
import pydantic
from .payment_method_response import PaymentMethodResponse
import typing_extensions
import typing
from ...core.serialization import FieldMetadata
from ...entity_types.types.entity_user_id import EntityUserId
from ...entity_types.types.entity_id import EntityId
import datetime as dt
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class PaymentMethodEvent(UniversalBaseModel):
    """
    Examples
    --------
    import datetime

    from mercoa.payment_method_types import (
        PaymentMethodEvent,
        PaymentMethodResponse_BankAccount,
    )

    PaymentMethodEvent(
        id="evt_a0f6ea94-0761-4a5e-a416-3c453cb7eced",
        webhook_ids=["webhook_12345"],
        user_id="user_e24fc81c-c5ee-47e8-af42-4fe29d895506",
        updated_by_entity_id="ent_a0f6ea94-0761-4a5e-a416-3c453cb7eced",
        data=PaymentMethodResponse_BankAccount(
            id="pm_4794d597-70dc-4fec-b6ec-c5988e759769",
            account_name="My Checking Account",
            bank_name="Chase",
            routing_number="12345678",
            account_number="99988767623",
            account_type="CHECKING",
            status="VERIFIED",
            is_default_source=True,
            is_default_destination=True,
            supported_currencies=["USD"],
            metadata={},
            frozen=False,
            confirmed_by_entity=True,
            created_at=datetime.datetime.fromisoformat(
                "2021-01-01 00:00:00+00:00",
            ),
            updated_at=datetime.datetime.fromisoformat(
                "2021-01-01 00:00:00+00:00",
            ),
        ),
        created_at=datetime.datetime.fromisoformat(
            "2024-01-01 00:00:00+00:00",
        ),
    )
    """

    id: PaymentMethodEventId = pydantic.Field()
    """
    The ID of the event
    """

    data: PaymentMethodResponse = pydantic.Field()
    """
    The payment method data at the time of the event
    """

    webhook_ids: typing_extensions.Annotated[typing.List[str], FieldMetadata(alias="webhookIds")] = pydantic.Field()
    """
    The list of webhook IDs associated with this event
    """

    user_id: typing_extensions.Annotated[typing.Optional[EntityUserId], FieldMetadata(alias="userId")] = pydantic.Field(
        default=None
    )
    """
    The ID of the user who triggered the event
    """

    updated_by_entity_id: typing_extensions.Annotated[
        typing.Optional[EntityId], FieldMetadata(alias="updatedByEntityId")
    ] = pydantic.Field(default=None)
    """
    The ID of the entity that updated the payment method
    """

    created_at: typing_extensions.Annotated[dt.datetime, FieldMetadata(alias="createdAt")] = pydantic.Field()
    """
    The timestamp when the event was created
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
