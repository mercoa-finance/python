# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...core.serialization import FieldMetadata
from ...invoice_types.types.invoice_id import InvoiceId


class InvoiceTiming(UniversalBaseModel):
    """
    Examples
    --------
    from mercoa.calculate import InvoiceTiming

    InvoiceTiming(
        invoice_id="in_26e7b5d3-a739-4b23-9ad9-6aaa085f47a9",
    )
    """

    invoice_id: typing_extensions.Annotated[InvoiceId, FieldMetadata(alias="invoiceId")]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
