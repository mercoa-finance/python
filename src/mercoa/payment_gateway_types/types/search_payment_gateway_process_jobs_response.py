# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing
from .process_payment_gateway_response import ProcessPaymentGatewayResponse
import pydantic
import typing_extensions
from ...core.serialization import FieldMetadata
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class SearchPaymentGatewayProcessJobsResponse(UniversalBaseModel):
    """
    Examples
    --------
    import datetime

    from mercoa.payment_gateway_types import (
        ProcessPaymentGatewayResponse_Failed,
        ProcessPaymentGatewayResponse_Pending,
        ProcessPaymentGatewayResponse_Success,
        SearchPaymentGatewayProcessJobsResponse,
    )

    SearchPaymentGatewayProcessJobsResponse(
        jobs=[
            ProcessPaymentGatewayResponse_Pending(
                job_id="pgp_8f86116b-3b4d-4ded-99ef-3bc929d8c33c",
                created_at=datetime.datetime.fromisoformat(
                    "2024-01-01 00:00:00+00:00",
                ),
                updated_at=datetime.datetime.fromisoformat(
                    "2024-01-01 00:00:00+00:00",
                ),
            ),
            ProcessPaymentGatewayResponse_Success(
                job_id="pgp_8f86116b-3b4d-4ded-99ef-3bc929d8c33c",
                receipt_url="https://www.payment-gateway.com/receipt/123123",
                created_at=datetime.datetime.fromisoformat(
                    "2024-01-01 00:00:00+00:00",
                ),
                updated_at=datetime.datetime.fromisoformat(
                    "2024-01-01 00:00:00+00:00",
                ),
            ),
            ProcessPaymentGatewayResponse_Failed(
                job_id="pgp_8f86116b-3b4d-4ded-99ef-3bc929d8c33c",
                error_type="NO_VALID_PAYMENT_GATEWAY_FOUND",
                error_message="No valid payment gateway was found in the document or HTML",
                created_at=datetime.datetime.fromisoformat(
                    "2024-01-01 00:00:00+00:00",
                ),
                updated_at=datetime.datetime.fromisoformat(
                    "2024-01-01 00:00:00+00:00",
                ),
            ),
        ],
        has_more=True,
    )
    """

    jobs: typing.List[ProcessPaymentGatewayResponse] = pydantic.Field()
    """
    List of payment gateway process jobs matching the search criteria
    """

    has_more: typing_extensions.Annotated[bool, FieldMetadata(alias="hasMore")] = pydantic.Field()
    """
    Whether there are more jobs available beyond the current page
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
