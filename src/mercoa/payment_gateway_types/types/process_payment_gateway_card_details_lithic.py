# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2
from ...core.serialization import FieldMetadata
from .process_payment_gateway_card_details_base import ProcessPaymentGatewayCardDetailsBase


class ProcessPaymentGatewayCardDetailsLithic(ProcessPaymentGatewayCardDetailsBase):
    """
    Examples
    --------
    from mercoa.payment_gateway_types import (
        ProcessPaymentGatewayAchDetails,
        ProcessPaymentGatewayCardDetailsLithic,
    )

    ProcessPaymentGatewayCardDetailsLithic(
        first_name="John",
        last_name="Doe",
        postal_code="12345",
        country="US",
        card_type="credit",
        embed_request="eyJ0b2tlbiI6InNhbXBsZV90b2tlbiIsImNzcyI6Imh0dHBzOi8vc3RvcmFnZS5nb29nbGVhcGlzLmNvbS9tZXJjb2EtcGFydG5lci1sb2dvcy9saXRoaWMuY3NzIn0=",
        hmac="abc123def456ghi789",
        ach_details=ProcessPaymentGatewayAchDetails(
            routing_number="123456789",
            account_number="987654321",
            account_name="John Doe",
        ),
    )
    """

    embed_request: typing_extensions.Annotated[str, FieldMetadata(alias="embedRequest")] = pydantic.Field()
    """
    The base64-encoded embed request for the Lithic virtual card
    """

    hmac: str = pydantic.Field()
    """
    The HMAC signature for the embed request
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
