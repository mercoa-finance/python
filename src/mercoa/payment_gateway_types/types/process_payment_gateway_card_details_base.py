# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing_extensions
from ...core.serialization import FieldMetadata
import pydantic
from ...commons.types.country_code import CountryCode
import typing
from .process_payment_gateway_card_type import ProcessPaymentGatewayCardType
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class ProcessPaymentGatewayCardDetailsBase(UniversalBaseModel):
    first_name: typing_extensions.Annotated[str, FieldMetadata(alias="firstName")] = pydantic.Field()
    """
    The first name of the card user
    """

    last_name: typing_extensions.Annotated[str, FieldMetadata(alias="lastName")] = pydantic.Field()
    """
    The last name of the card user
    """

    postal_code: typing_extensions.Annotated[str, FieldMetadata(alias="postalCode")] = pydantic.Field()
    """
    The postal code of the address of the card
    """

    country: CountryCode = pydantic.Field()
    """
    The country of the address of the card
    """

    card_type: typing_extensions.Annotated[
        typing.Optional[ProcessPaymentGatewayCardType], FieldMetadata(alias="cardType")
    ] = pydantic.Field(default=None)
    """
    The type of card (credit or debit). Defaults to debit.
    """

    phone_number: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="phoneNumber")] = (
        pydantic.Field(default=None)
    )
    """
    The phone number of the card user
    """

    email: typing.Optional[str] = pydantic.Field(default=None)
    """
    The email of the card user
    """

    full_address: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="fullAddress")] = (
        pydantic.Field(default=None)
    )
    """
    The full address of the card user
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
