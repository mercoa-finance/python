# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import pydantic
from .payment_gateway_job_status import PaymentGatewayJobStatus
import typing
import typing_extensions
from ...core.serialization import FieldMetadata
import datetime as dt
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class PaymentGatewayAttempt(UniversalBaseModel):
    """
    Examples
    --------
    import datetime

    from mercoa.payment_gateway_types import PaymentGatewayAttempt

    PaymentGatewayAttempt(
        id="pgpa_8f86116b-3b4d-4ded-99ef-3bc929d8c33c",
        status="COMPLETED",
        amount=150.75,
        receipt_url="https://www.payment-gateway.com/receipt/123123",
        created_at=datetime.datetime.fromisoformat(
            "2024-01-01 00:00:00+00:00",
        ),
    )
    """

    id: str = pydantic.Field()
    """
    The unique identifier for the payment gateway attempt
    """

    status: PaymentGatewayJobStatus = pydantic.Field()
    """
    The status of the attempt
    """

    amount: typing.Optional[float] = pydantic.Field(default=None)
    """
    The amount processed in this attempt
    """

    receipt_url: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="receiptUrl")] = pydantic.Field(
        default=None
    )
    """
    The URL of the receipt for this attempt
    """

    created_at: typing_extensions.Annotated[dt.datetime, FieldMetadata(alias="createdAt")] = pydantic.Field()
    """
    The timestamp when the attempt was created
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
