# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing_extensions
from ...core.serialization import FieldMetadata
import pydantic
import typing
from .validate_payment_gateway_card_response import ValidatePaymentGatewayCardResponse
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class ValidatePaymentGatewaySuccessResponse(UniversalBaseModel):
    job_id: typing_extensions.Annotated[str, FieldMetadata(alias="jobId")] = pydantic.Field()
    """
    The job ID of the payment gateway validation job
    """

    payment_gateway_url: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="paymentGatewayUrl")] = (
        pydantic.Field(default=None)
    )
    """
    The payment gateway URL that was found in the document
    """

    session_url: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="sessionUrl")] = pydantic.Field(
        default=None
    )
    """
    The URL of the playback session for the agent that validated the payment gateway
    """

    card: typing.Optional[ValidatePaymentGatewayCardResponse] = pydantic.Field(default=None)
    """
    Data on the card payments that were extracted from the gateway
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
