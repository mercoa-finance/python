# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing
from .validate_payment_gateway_response import ValidatePaymentGatewayResponse
import pydantic
import typing_extensions
from ...core.serialization import FieldMetadata
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class SearchPaymentGatewayValidationJobsResponse(UniversalBaseModel):
    """
    Examples
    --------
    import datetime

    from mercoa.payment_gateway_types import (
        SearchPaymentGatewayValidationJobsResponse,
        ValidatePaymentGatewayCardFee_Percentage,
        ValidatePaymentGatewayCardResponse,
        ValidatePaymentGatewayResponse_Failed,
        ValidatePaymentGatewayResponse_Pending,
        ValidatePaymentGatewayResponse_Success,
    )

    SearchPaymentGatewayValidationJobsResponse(
        jobs=[
            ValidatePaymentGatewayResponse_Pending(
                job_id="pgv_8f86116b-3b4d-4ded-99ef-3bc929d8c33c",
                created_at=datetime.datetime.fromisoformat(
                    "2024-01-01 00:00:00+00:00",
                ),
                updated_at=datetime.datetime.fromisoformat(
                    "2024-01-01 00:00:00+00:00",
                ),
            ),
            ValidatePaymentGatewayResponse_Success(
                job_id="pgv_8f86116b-3b4d-4ded-99ef-3bc929d8c33c",
                payment_gateway_url="https://www.payment-gateway.com/invoice/pgv_8f86116b-3b4d-4ded-99ef-3bc929d8c33c",
                card=ValidatePaymentGatewayCardResponse(
                    eligibility="ACCEPTED",
                    fee=ValidatePaymentGatewayCardFee_Percentage(
                        value=2.5,
                    ),
                ),
                invoice_amount=150.75,
                gateway_amount=155.5,
                vendor_name="Acme Corporation",
                created_at=datetime.datetime.fromisoformat(
                    "2024-01-01 00:00:00+00:00",
                ),
                updated_at=datetime.datetime.fromisoformat(
                    "2024-01-01 00:00:00+00:00",
                ),
            ),
            ValidatePaymentGatewayResponse_Failed(
                job_id="pgv_8f86116b-3b4d-4ded-99ef-3bc929d8c33c",
                error_type="NO_VALID_PAYMENT_GATEWAY_FOUND",
                error_message="No valid payment gateway was found in the document or HTML",
                created_at=datetime.datetime.fromisoformat(
                    "2024-01-01 00:00:00+00:00",
                ),
                updated_at=datetime.datetime.fromisoformat(
                    "2024-01-01 00:00:00+00:00",
                ),
            ),
        ],
        has_more=True,
    )
    """

    jobs: typing.List[ValidatePaymentGatewayResponse] = pydantic.Field()
    """
    List of payment gateway validation jobs matching the search criteria
    """

    has_more: typing_extensions.Annotated[bool, FieldMetadata(alias="hasMore")] = pydantic.Field()
    """
    Whether there are more jobs available beyond the current page
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
