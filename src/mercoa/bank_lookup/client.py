# This file was auto-generated by Fern from our API Definition.

import typing

from ..core.client_wrapper import AsyncClientWrapper, SyncClientWrapper
from ..core.request_options import RequestOptions
from .raw_client import AsyncRawBankLookupClient, RawBankLookupClient
from .types.bank_lookup_response import BankLookupResponse


class BankLookupClient:
    def __init__(self, *, client_wrapper: SyncClientWrapper):
        self._raw_client = RawBankLookupClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> RawBankLookupClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        RawBankLookupClient
        """
        return self._raw_client

    def find(
        self, *, routing_number: str, request_options: typing.Optional[RequestOptions] = None
    ) -> BankLookupResponse:
        """
        Find bank account details

        Parameters
        ----------
        routing_number : str
            Routing number to validate

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        BankLookupResponse

        Examples
        --------
        from mercoa import Mercoa

        client = Mercoa(
            token="YOUR_TOKEN",
        )
        client.bank_lookup.find(
            routing_number="026009593",
        )
        """
        _response = self._raw_client.find(routing_number=routing_number, request_options=request_options)
        return _response.data


class AsyncBankLookupClient:
    def __init__(self, *, client_wrapper: AsyncClientWrapper):
        self._raw_client = AsyncRawBankLookupClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> AsyncRawBankLookupClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        AsyncRawBankLookupClient
        """
        return self._raw_client

    async def find(
        self, *, routing_number: str, request_options: typing.Optional[RequestOptions] = None
    ) -> BankLookupResponse:
        """
        Find bank account details

        Parameters
        ----------
        routing_number : str
            Routing number to validate

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        BankLookupResponse

        Examples
        --------
        import asyncio

        from mercoa import AsyncMercoa

        client = AsyncMercoa(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.bank_lookup.find(
                routing_number="026009593",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.find(routing_number=routing_number, request_options=request_options)
        return _response.data
