# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing_extensions
from ...core.serialization import FieldMetadata
from .bnpl_installment_type import BnplInstallmentType
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import typing
import pydantic


class BnplInstallment(UniversalBaseModel):
    """
    Examples
    --------
    from mercoa.invoice_types import BnplInstallment

    BnplInstallment(
        number=0,
        due_date="2025-06-18",
        amount=12000,
        type="DOWN_PAYMENT",
    )
    """

    number: int
    due_date: typing_extensions.Annotated[str, FieldMetadata(alias="dueDate")]
    amount: int
    type: BnplInstallmentType

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
