# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations
from ...core.pydantic_utilities import UniversalBaseModel
import typing
import typing_extensions
from ...core.serialization import FieldMetadata
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class PaymentSourceOptions_Bnpl(UniversalBaseModel):
    """
    Examples
    --------
    from mercoa.invoice_types import PaymentSourceOptions_Bnpl

    PaymentSourceOptions_Bnpl(
        installments_start_date="2025-06-18",
        deferment_weeks=8,
        accepted_terms=True,
    )
    """

    type: typing.Literal["bnpl"] = "bnpl"
    installments_start_date: typing_extensions.Annotated[str, FieldMetadata(alias="installmentsStartDate")]
    deferment_weeks: typing_extensions.Annotated[int, FieldMetadata(alias="defermentWeeks")]
    accepted_terms: typing_extensions.Annotated[bool, FieldMetadata(alias="acceptedTerms")]
    loan_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="loanId")] = None
    downpayment_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="downpaymentId")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


"""
from mercoa.invoice_types import PaymentSourceOptions_Bnpl

PaymentSourceOptions_Bnpl(
    installments_start_date="2025-06-18",
    deferment_weeks=8,
    accepted_terms=True,
)
"""
PaymentSourceOptions = PaymentSourceOptions_Bnpl
