# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...core.serialization import FieldMetadata
from .invoice_id import InvoiceId


class BulkInvoiceApprovalFromObjectResponse(UniversalBaseModel):
    """
    Examples
    --------
    from mercoa.invoice_types import BulkInvoiceApprovalFromObjectResponse

    BulkInvoiceApprovalFromObjectResponse(
        id="in_26e7b5d3-a739-4b23-9ad9-6aaa085f47a9",
    )
    """

    id: typing.Optional[InvoiceId] = pydantic.Field(default=None)
    """
    The ID of the invoice that was approved. If the invoice was not approved, this will be undefined
    """

    foreign_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="foreignId")] = pydantic.Field(
        default=None
    )
    """
    If provided, this is the foreign ID of the invoice that was approved.
    """

    error: typing.Optional[str] = pydantic.Field(default=None)
    """
    The error message if the invoice was not approved
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
