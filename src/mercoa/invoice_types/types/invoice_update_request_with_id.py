# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2
from ...core.serialization import FieldMetadata
from .invoice_id import InvoiceId
from .invoice_update_request import InvoiceUpdateRequest


class InvoiceUpdateRequestWithId(InvoiceUpdateRequest):
    """
    Examples
    --------
    import datetime

    from mercoa.invoice_types import (
        InvoiceLineItemUpdateRequest,
        InvoiceUpdateRequestWithId,
    )

    InvoiceUpdateRequestWithId(
        invoice_id="inv_21661ac1-a2a8-4465-a6c0-64474ba8181d",
        status="NEW",
        amount=100.0,
        currency="USD",
        due_date=datetime.datetime.fromisoformat(
            "2024-01-31 00:00:00+00:00",
        ),
        invoice_date=datetime.datetime.fromisoformat(
            "2024-01-01 00:00:00+00:00",
        ),
        invoice_number="INV-001",
        line_items=[
            InvoiceLineItemUpdateRequest(
                description="Item 1",
                amount=50.0,
                quantity=1.0,
            ),
            InvoiceLineItemUpdateRequest(
                description="Item 2",
                amount=50.0,
                quantity=1.0,
            ),
        ],
    )
    """

    invoice_id: typing_extensions.Annotated[InvoiceId, FieldMetadata(alias="invoiceId")] = pydantic.Field()
    """
    The ID or foreign ID of the invoice to update
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
