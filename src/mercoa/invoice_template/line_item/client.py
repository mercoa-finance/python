# This file was auto-generated by Fern from our API Definition.

import typing

from ...core.client_wrapper import AsyncClientWrapper, SyncClientWrapper
from ...core.request_options import RequestOptions
from ...invoice_types.types.invoice_line_item_id import InvoiceLineItemId
from ...invoice_types.types.invoice_line_item_individual_update_request import InvoiceLineItemIndividualUpdateRequest
from ...invoice_types.types.invoice_template_id import InvoiceTemplateId
from ...invoice_types.types.invoice_template_response import InvoiceTemplateResponse
from .raw_client import AsyncRawLineItemClient, RawLineItemClient

# this is used as the default value for optional parameters
OMIT = typing.cast(typing.Any, ...)


class LineItemClient:
    def __init__(self, *, client_wrapper: SyncClientWrapper):
        self._raw_client = RawLineItemClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> RawLineItemClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        RawLineItemClient
        """
        return self._raw_client

    def update(
        self,
        invoice_template_id: InvoiceTemplateId,
        line_item_id: InvoiceLineItemId,
        *,
        request: InvoiceLineItemIndividualUpdateRequest,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> InvoiceTemplateResponse:
        """
        Update invoice template line item

        Parameters
        ----------
        invoice_template_id : InvoiceTemplateId
            Invoice Template ID

        line_item_id : InvoiceLineItemId
            Invoice Line Item ID

        request : InvoiceLineItemIndividualUpdateRequest

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        InvoiceTemplateResponse

        Examples
        --------
        import datetime

        from mercoa import Mercoa
        from mercoa.invoice_types import InvoiceLineItemIndividualUpdateRequest

        client = Mercoa(
            token="YOUR_TOKEN",
        )
        client.invoice_template.line_item.update(
            invoice_template_id="invt_13c07096-5848-4aeb-ae7d-6576289034c4",
            line_item_id="inli_8aa84cb8-2ae7-4579-8fa3-87586e7c14a7",
            request=InvoiceLineItemIndividualUpdateRequest(
                name="Product A",
                description="Product A",
                service_start_date=datetime.datetime.fromisoformat(
                    "2021-01-01 00:00:00+00:00",
                ),
                service_end_date=datetime.datetime.fromisoformat(
                    "2021-01-31 00:00:00+00:00",
                ),
                metadata={"key1": "value1", "key2": "value2"},
                gl_account_id="600394",
            ),
        )
        """
        _response = self._raw_client.update(
            invoice_template_id, line_item_id, request=request, request_options=request_options
        )
        return _response.data


class AsyncLineItemClient:
    def __init__(self, *, client_wrapper: AsyncClientWrapper):
        self._raw_client = AsyncRawLineItemClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> AsyncRawLineItemClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        AsyncRawLineItemClient
        """
        return self._raw_client

    async def update(
        self,
        invoice_template_id: InvoiceTemplateId,
        line_item_id: InvoiceLineItemId,
        *,
        request: InvoiceLineItemIndividualUpdateRequest,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> InvoiceTemplateResponse:
        """
        Update invoice template line item

        Parameters
        ----------
        invoice_template_id : InvoiceTemplateId
            Invoice Template ID

        line_item_id : InvoiceLineItemId
            Invoice Line Item ID

        request : InvoiceLineItemIndividualUpdateRequest

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        InvoiceTemplateResponse

        Examples
        --------
        import asyncio
        import datetime

        from mercoa import AsyncMercoa
        from mercoa.invoice_types import InvoiceLineItemIndividualUpdateRequest

        client = AsyncMercoa(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.invoice_template.line_item.update(
                invoice_template_id="invt_13c07096-5848-4aeb-ae7d-6576289034c4",
                line_item_id="inli_8aa84cb8-2ae7-4579-8fa3-87586e7c14a7",
                request=InvoiceLineItemIndividualUpdateRequest(
                    name="Product A",
                    description="Product A",
                    service_start_date=datetime.datetime.fromisoformat(
                        "2021-01-01 00:00:00+00:00",
                    ),
                    service_end_date=datetime.datetime.fromisoformat(
                        "2021-01-31 00:00:00+00:00",
                    ),
                    metadata={"key1": "value1", "key2": "value2"},
                    gl_account_id="600394",
                ),
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.update(
            invoice_template_id, line_item_id, request=request, request_options=request_options
        )
        return _response.data
